@fncall
mov $fp $sp
push 0
push 0
mov $t0 $fp
sub $t0 8
load $a0 *t0
push $a0
mov $t0 $fp
sub $t0 16
load $a0 *t0
pop $t0
add $t0 $a0
mov $a0 $t0
mov $t0 $fp
add $t0 24
store *t0 $a0
mov $t0 $fp
add $t0 24
load $a0 *t0
push $a0
mov $t0 $fp
sub $t0 24
load $a0 *t0
pop $t0
mul $t0 $a0
mov $a0 $t0
mov $t0 $fp
add $t0 32
store *t0 $a0
mov $t0 $fp
add $t0 32
load $a0 *t0
ret


@main
mov $fp $sp
push 0
push $r0
push $r1
push $ra
push $fp
mov $a0 3
push $a0
mov $a0 2
push $a0
mov $a0 1
push $a0
jal @fncall
pop $t0
pop $t0
pop $t0
pop $t0
pop $t0
pop $fp
pop $ra
pop $r1
pop $r0
mov $t0 $fp
add $t0 0
store *t0 $a0
mov $t0 $fp
add $t0 0
load $a0 *t0
pnt $a0
mov $a0 0
ret


